{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class EpiCadastrarComponent {\n  constructor(client) {\n    this.client = client;\n  }\n  cadastrar() {\n    let epi = {\n      descricao: this.descricao,\n      c_A: this.c_a,\n      quantidade: this.quantidade\n    };\n    console.log(epi);\n    this.client.post(\"https://localhost:7144/EpiList/EPI/cadastrar\", epi).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function EpiCadastrarComponent_Factory(t) {\n    return new (t || EpiCadastrarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EpiCadastrarComponent,\n    selectors: [[\"app-epi-cadastrar\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[\"for\", \"descricao\"], [\"type\", \"text\", \"id\", \"descricao\", \"name\", \"descricao\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"c_a\"], [\"type\", \"text\", \"id\", \"c_a\", \"name\", \"c_a\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"quantidade\"], [\"type\", \"number\", \"id\", \"quantidade\", \"name\", \"quantidade\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function EpiCadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastro de Epi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function EpiCadastrarComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 2);\n        i0.ɵɵtext(8, \"C\\u00F3digo CA:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function EpiCadastrarComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.c_A = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 4);\n        i0.ɵɵtext(12, \"Quantidade:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function EpiCadastrarComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.epi.quantidade = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"button\", 6);\n        i0.ɵɵtext(15, \"Salvar\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.descricao);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.c_A);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.epi.quantidade);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.RequiredValidator, i2.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EpiCadastrarComponent","constructor","client","cadastrar","epi","descricao","c_A","c_a","quantidade","console","log","post","subscribe","next","data","error","erro","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","EpiCadastrarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EpiCadastrarComponent_Template_input_ngModelChange_5_listener","$event","EpiCadastrarComponent_Template_input_ngModelChange_9_listener","EpiCadastrarComponent_Template_input_ngModelChange_13_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Epi\\epi-cadastrar\\epi-cadastrar.component.ts","C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Epi\\epi-cadastrar\\epi-cadastrar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Epi } from 'src/app/models/epi.model';\n\n@Component({\n  selector: 'app-epi-cadastrar',\n  templateUrl: './epi-cadastrar.component.html',\n  styleUrls: ['./epi-cadastrar.component.css']\n})\nexport class EpiCadastrarComponent {\n  constructor(private client: HttpClient) {}\n  quantidade!: number;\n  descricao!:string;\n  c_a!:string;\n\n  cadastrar(): void {\n    let epi : Epi={\n      descricao : this.descricao,\n      c_A: this.c_a,\n      quantidade : this.quantidade\n    };\n    console.log(epi);\n    this.client.post<Epi>(\"https://localhost:7144/EpiList/EPI/cadastrar\", epi).subscribe({\n      next: (data) => {\n        console.log(data);\n      },\n      error: (erro) => {\n        console.log(erro);\n      },\n    });\n  }\n}\n","<h1>Cadastro de Epi</h1>\n\n    <div>\n      <label for=\"descricao\">Descrição:</label>\n      <input type=\"text\" id=\"descricao\" name=\"descricao\" [(ngModel)]=\"descricao\" required>\n    </div>\n\n    <div>\n      <label for=\"c_a\">Código CA:</label>\n      <input type=\"text\" id=\"c_a\" name=\"c_a\" [(ngModel)]=\"c_A\" required>\n    </div>\n\n    <div>\n      <label for=\"quantidade\">Quantidade:</label>\n      <input type=\"number\" id=\"quantidade\" name=\"quantidade\" [(ngModel)]=\"epi.quantidade\" required>\n    </div>\n\n    <button type=\"submit\">Salvar</button>\n\n"],"mappings":";;;AASA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,MAAkB;IAAlB,KAAAA,MAAM,GAANA,MAAM;EAAe;EAKzCC,SAASA,CAAA;IACP,IAAIC,GAAG,GAAO;MACZC,SAAS,EAAG,IAAI,CAACA,SAAS;MAC1BC,GAAG,EAAE,IAAI,CAACC,GAAG;MACbC,UAAU,EAAG,IAAI,CAACA;KACnB;IACDC,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;IAChB,IAAI,CAACF,MAAM,CAACS,IAAI,CAAM,8CAA8C,EAAEP,GAAG,CAAC,CAACQ,SAAS,CAAC;MACnFC,IAAI,EAAGC,IAAI,IAAI;QACbL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACnB,CAAC;MACDC,KAAK,EAAGC,IAAI,IAAI;QACdP,OAAO,CAACC,GAAG,CAACM,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBArBUjB,qBAAqB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBtB,qBAAqB;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTlCX,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,sBAAe;QAAAd,EAAA,CAAAe,YAAA,EAAK;QAEpBf,EAAA,CAAAa,cAAA,UAAK;QACoBb,EAAA,CAAAc,MAAA,2BAAU;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACzCf,EAAA,CAAAa,cAAA,eAAoF;QAAjCb,EAAA,CAAAgB,UAAA,2BAAAC,8DAAAC,MAAA;UAAA,OAAAN,GAAA,CAAAzB,SAAA,GAAA+B,MAAA;QAAA,EAAuB;QAA1ElB,EAAA,CAAAe,YAAA,EAAoF;QAGtFf,EAAA,CAAAa,cAAA,UAAK;QACcb,EAAA,CAAAc,MAAA,sBAAU;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACnCf,EAAA,CAAAa,cAAA,eAAkE;QAA3Bb,EAAA,CAAAgB,UAAA,2BAAAG,8DAAAD,MAAA;UAAA,OAAAN,GAAA,CAAAxB,GAAA,GAAA8B,MAAA;QAAA,EAAiB;QAAxDlB,EAAA,CAAAe,YAAA,EAAkE;QAGpEf,EAAA,CAAAa,cAAA,WAAK;QACqBb,EAAA,CAAAc,MAAA,mBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAC3Cf,EAAA,CAAAa,cAAA,gBAA6F;QAAtCb,EAAA,CAAAgB,UAAA,2BAAAI,+DAAAF,MAAA;UAAA,OAAAN,GAAA,CAAA1B,GAAA,CAAAI,UAAA,GAAA4B,MAAA;QAAA,EAA4B;QAAnFlB,EAAA,CAAAe,YAAA,EAA6F;QAG/Ff,EAAA,CAAAa,cAAA,iBAAsB;QAAAb,EAAA,CAAAc,MAAA,cAAM;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAbgBf,EAAA,CAAAqB,SAAA,GAAuB;QAAvBrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAzB,SAAA,CAAuB;QAKnCa,EAAA,CAAAqB,SAAA,GAAiB;QAAjBrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAAxB,GAAA,CAAiB;QAKDY,EAAA,CAAAqB,SAAA,GAA4B;QAA5BrB,EAAA,CAAAsB,UAAA,YAAAV,GAAA,CAAA1B,GAAA,CAAAI,UAAA,CAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}