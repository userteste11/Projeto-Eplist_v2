{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction EpiListarComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"{{ \");\n    i0.ɵɵelement(7, \"e\", 2);\n    i0.ɵɵtext(8, \" }}\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵtext(17);\n    i0.ɵɵpipe(18, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const e_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r1.epiId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(e_r1.descricao);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r0.p.quantidade);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(13, 6, ctx_r0.p.preco, \"BRL\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.p.categoria == null ? null : ctx_r0.p.categoria.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(18, 9, ctx_r0.p.criadoEm, \"dd/MM/yyyy\"));\n  }\n}\nexport class EpiListarComponent {\n  constructor(client) {\n    this.client = client;\n    this.epi = [];\n    //Um problema de CORS ao fazer uma requisição para a\n    //nossa API\n  }\n\n  ngOnInit() {\n    console.log(\"O componente foi carregado!\");\n    this.client.get(\"https://localhost:7144/EpiList/EPI/listar\").subscribe({\n      //Requisição com sucesso\n      next: epi => {\n        this.epi = epi;\n        console.table(epi);\n      },\n      //Requisição com erro\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function EpiListarComponent_Factory(t) {\n    return new (t || EpiListarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EpiListarComponent,\n    selectors: [[\"app-epi-listar\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[\"id\", \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"C_A\"]],\n    template: function EpiListarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Lista de Epis\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"table\", 0)(3, \"tr\")(4, \"th\");\n        i0.ɵɵtext(5, \"#Id\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"th\");\n        i0.ɵɵtext(7, \"Descri\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"C_A\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Quantidade\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, EpiListarComponent_tr_12_Template, 19, 12, \"tr\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.epi);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.CurrencyPipe, i2.DatePipe],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","e_r1","epiId","descricao","ctx_r0","p","quantidade","ɵɵpipeBind2","preco","categoria","nome","criadoEm","EpiListarComponent","constructor","client","epi","ngOnInit","console","log","get","subscribe","next","table","error","erro","_","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","EpiListarComponent_Template","rf","ctx","ɵɵtemplate","EpiListarComponent_tr_12_Template","ɵɵproperty"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Epi\\epi-listar\\epi-listar.component.ts","C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Epi\\epi-listar\\epi-listar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Epi } from 'src/app/models/epi.model';\n\n@Component({\n  selector: 'app-epi-listar',\n  templateUrl: './epi-listar.component.html',\n  styleUrls: ['./epi-listar.component.css']\n})\nexport class EpiListarComponent {\n\n  epi : Epi[] = [];\n\n  constructor(private client: HttpClient){ \n    //Um problema de CORS ao fazer uma requisição para a\n    //nossa API\n  }\n\n  ngOnInit() : void{\n    console.log(\"O componente foi carregado!\");\n\n    this.client.get<Epi[]>(\"https://localhost:7144/EpiList/EPI/listar\")\n      .subscribe({\n        //Requisição com sucesso\n        next: (epi) => {\n          this.epi = epi;\n          console.table(epi);\n        }, \n        //Requisição com erro\n        error: (erro) => {\n          console.log(erro);\n        }\n      })\n  }\n}\n","<h1>Lista de Epis</h1>\n\n<table id=\"table\">\n  <tr>\n    <th>#Id</th>\n    <th>Descrição</th>\n    <th>C_A</th>\n    <th>Quantidade</th>\n\n  </tr>\n  <tr *ngFor=\"let e of epi\">\n    <td>{{ e.epiId }}</td>\n    <td>{{ e.descricao }}</td>\n    <td>{{ <e class=\"C_A\"></e> }}</td>\n    <td>{{ p.quantidade }}</td>\n    <td>{{ p.preco | currency : \"BRL\" }}</td>\n    <td>{{ p.categoria?.nome }}</td>\n    <td>{{ p.criadoEm | date : \"dd/MM/yyyy\" }}</td>\n  </tr>\n</table>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}