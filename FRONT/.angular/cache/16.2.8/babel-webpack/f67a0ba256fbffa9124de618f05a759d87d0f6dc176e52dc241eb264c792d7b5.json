{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nexport class EpiCadastrarComponent {\n  constructor(client) {\n    this.client = client;\n    this.epi = {\n      descricao: \"\",\n      C_A: \"\",\n      Quantidade: null,\n      EpiID: \"\"\n    };\n  }\n  onSubmit() {\n    this.client.post(\"https://localhost:7144/EpiList/EPI/cadastrar\", this.epi).subscribe({\n      next: data => {\n        console.log(data);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function EpiCadastrarComponent_Factory(t) {\n    return new (t || EpiCadastrarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EpiCadastrarComponent,\n    selectors: [[\"app-epi-cadastrar\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"descricao\"], [\"type\", \"text\", \"id\", \"descricao\", \"name\", \"descricao\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"c_a\"], [\"type\", \"text\", \"id\", \"c_a\", \"name\", \"c_a\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"quantidade\"], [\"type\", \"number\", \"id\", \"quantidade\", \"name\", \"quantidade\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"]],\n    template: function EpiCadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Cadastro de Epi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EpiCadastrarComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\")(4, \"label\", 1);\n        i0.ɵɵtext(5, \"Descri\\u00E7\\u00E3o:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function EpiCadastrarComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.epi.descricao = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 3);\n        i0.ɵɵtext(9, \"C\\u00F3digo C_A:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EpiCadastrarComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.epi.C_A = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\")(12, \"label\", 5);\n        i0.ɵɵtext(13, \"Quantidade:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EpiCadastrarComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.epi.quantidade = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"button\", 7);\n        i0.ɵɵtext(16, \"Salvar\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.epi.descricao);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.epi.C_A);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.epi.quantidade);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EpiCadastrarComponent","constructor","client","epi","descricao","C_A","Quantidade","EpiID","onSubmit","post","subscribe","next","data","console","log","error","erro","_","i0","ɵɵdirectiveInject","i1","HttpClient","_2","selectors","decls","vars","consts","template","EpiCadastrarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","EpiCadastrarComponent_Template_form_ngSubmit_2_listener","EpiCadastrarComponent_Template_input_ngModelChange_6_listener","$event","EpiCadastrarComponent_Template_input_ngModelChange_10_listener","EpiCadastrarComponent_Template_input_ngModelChange_14_listener","quantidade","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Epi\\epi-cadastrar\\epi-cadastrar.component.ts","C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Epi\\epi-cadastrar\\epi-cadastrar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Epi } from 'src/app/models/epi.model';\n\n@Component({\n  selector: 'app-epi-cadastrar',\n  templateUrl: './epi-cadastrar.component.html',\n  styleUrls: ['./epi-cadastrar.component.css']\n})\nexport class EpiCadastrarComponent {\n  constructor(private client: HttpClient) {}\n  epi: Epi = {\n    descricao: \"\",\n    C_A: \"\",\n    Quantidade: null,\n    EpiID: \"\",\n  };\n\n  onSubmit(): void {\n    this.client.post<Epi>(\"https://localhost:7144/EpiList/EPI/cadastrar\", this.epi).subscribe({\n      next: (data) => {\n        console.log(data);\n      },\n      error: (erro) => {\n        console.log(erro);\n      },\n    });\n  }\n}\n","<h1>Cadastro de Epi</h1>\n<form (ngSubmit)=\"onSubmit()\">\n  <div>\n    <label for=\"descricao\">Descrição:</label>\n    <input type=\"text\" id=\"descricao\" name=\"descricao\" [(ngModel)]=\"epi.descricao\" required>\n  </div>\n\n  <div>\n    <label for=\"c_a\">Código C_A:</label>\n    <input type=\"text\" id=\"c_a\" name=\"c_a\" [(ngModel)]=\"epi.C_A\" required>\n  </div>\n\n  <div>\n    <label for=\"quantidade\">Quantidade:</label>\n    <input type=\"number\" id=\"quantidade\" name=\"quantidade\" [(ngModel)]=\"epi.quantidade\" required>\n  </div>\n\n  <button type=\"submit\">Salvar</button>\n</form>\n"],"mappings":";;;AASA,OAAM,MAAOA,qBAAqB;EAChCC,YAAoBC,MAAkB;IAAlB,KAAAA,MAAM,GAANA,MAAM;IAC1B,KAAAC,GAAG,GAAQ;MACTC,SAAS,EAAE,EAAE;MACbC,GAAG,EAAE,EAAE;MACPC,UAAU,EAAE,IAAI;MAChBC,KAAK,EAAE;KACR;EANwC;EAQzCC,QAAQA,CAAA;IACN,IAAI,CAACN,MAAM,CAACO,IAAI,CAAM,8CAA8C,EAAE,IAAI,CAACN,GAAG,CAAC,CAACO,SAAS,CAAC;MACxFC,IAAI,EAAGC,IAAI,IAAI;QACbC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACnB,CAAC;MACDG,KAAK,EAAGC,IAAI,IAAI;QACdH,OAAO,CAACC,GAAG,CAACE,IAAI,CAAC;MACnB;KACD,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAlBUjB,qBAAqB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBtB,qBAAqB;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTlCX,EAAA,CAAAa,cAAA,SAAI;QAAAb,EAAA,CAAAc,MAAA,sBAAe;QAAAd,EAAA,CAAAe,YAAA,EAAK;QACxBf,EAAA,CAAAa,cAAA,cAA8B;QAAxBb,EAAA,CAAAgB,UAAA,sBAAAC,wDAAA;UAAA,OAAYL,GAAA,CAAAtB,QAAA,EAAU;QAAA,EAAC;QAC3BU,EAAA,CAAAa,cAAA,UAAK;QACoBb,EAAA,CAAAc,MAAA,2BAAU;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACzCf,EAAA,CAAAa,cAAA,eAAwF;QAArCb,EAAA,CAAAgB,UAAA,2BAAAE,8DAAAC,MAAA;UAAA,OAAAP,GAAA,CAAA3B,GAAA,CAAAC,SAAA,GAAAiC,MAAA;QAAA,EAA2B;QAA9EnB,EAAA,CAAAe,YAAA,EAAwF;QAG1Ff,EAAA,CAAAa,cAAA,UAAK;QACcb,EAAA,CAAAc,MAAA,uBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACpCf,EAAA,CAAAa,cAAA,gBAAsE;QAA/Bb,EAAA,CAAAgB,UAAA,2BAAAI,+DAAAD,MAAA;UAAA,OAAAP,GAAA,CAAA3B,GAAA,CAAAE,GAAA,GAAAgC,MAAA;QAAA,EAAqB;QAA5DnB,EAAA,CAAAe,YAAA,EAAsE;QAGxEf,EAAA,CAAAa,cAAA,WAAK;QACqBb,EAAA,CAAAc,MAAA,mBAAW;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QAC3Cf,EAAA,CAAAa,cAAA,gBAA6F;QAAtCb,EAAA,CAAAgB,UAAA,2BAAAK,+DAAAF,MAAA;UAAA,OAAAP,GAAA,CAAA3B,GAAA,CAAAqC,UAAA,GAAAH,MAAA;QAAA,EAA4B;QAAnFnB,EAAA,CAAAe,YAAA,EAA6F;QAG/Ff,EAAA,CAAAa,cAAA,iBAAsB;QAAAb,EAAA,CAAAc,MAAA,cAAM;QAAAd,EAAA,CAAAe,YAAA,EAAS;;;QAbgBf,EAAA,CAAAuB,SAAA,GAA2B;QAA3BvB,EAAA,CAAAwB,UAAA,YAAAZ,GAAA,CAAA3B,GAAA,CAAAC,SAAA,CAA2B;QAKvCc,EAAA,CAAAuB,SAAA,GAAqB;QAArBvB,EAAA,CAAAwB,UAAA,YAAAZ,GAAA,CAAA3B,GAAA,CAAAE,GAAA,CAAqB;QAKLa,EAAA,CAAAuB,SAAA,GAA4B;QAA5BvB,EAAA,CAAAwB,UAAA,YAAAZ,GAAA,CAAA3B,GAAA,CAAAqC,UAAA,CAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}