{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nexport class UnidadeCadastrarComponent {\n  constructor(fb, client, router) {\n    this.fb = fb;\n    this.client = client;\n    this.router = router;\n    this.usuarios = [];\n  }\n  ngOnInit() {\n    this.client.get(\"https://localhost:7144/EpiList/Usuario/listar\").subscribe({\n      //Requisição com sucesso\n      next: usuario => {\n        this.usuarios = usuario;\n        console.table(usuario);\n      },\n      //Requisição com erro\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    this.unidadeForm = this.fb.group({\n      nome: ['', Validators.required],\n      usuariosId: this.fb.array([], Validators.required)\n    });\n  }\n  adicionarUsuario(cargo) {\n    const selectedUsuarios = this.usuarios.filter(usuario => usuario.cargo === cargo);\n    const usuariosIdControl = this.unidadeForm.get('usuariosId');\n    for (const usuario of selectedUsuarios) {\n      usuariosIdControl.push(this.fb.control(usuario.id));\n    }\n  }\n  cadastrarUnidade() {\n    // Enviar os dados do formulário para o servidor\n    console.log(this.unidadeForm.value);\n    // Você pode usar um serviço para fazer a chamada de API para cadastrar a unidade.\n  }\n  static #_ = this.ɵfac = function UnidadeCadastrarComponent_Factory(t) {\n    return new (t || UnidadeCadastrarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnidadeCadastrarComponent,\n    selectors: [[\"app-unidade-cadastrar\"]],\n    decls: 2,\n    vars: 0,\n    template: function UnidadeCadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"unidade-cadastrar works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["UnidadeCadastrarComponent","constructor","fb","client","router","usuarios","ngOnInit","get","subscribe","next","usuario","console","table","error","erro","log","unidadeForm","group","nome","Validators","required","usuariosId","array","adicionarUsuario","cargo","selectedUsuarios","filter","usuariosIdControl","push","control","id","cadastrarUnidade","value","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","HttpClient","i3","Router","_2","selectors","decls","vars","template","UnidadeCadastrarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Unidade\\unidade-cadastrar\\unidade-cadastrar.component.ts","C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Unidade\\unidade-cadastrar\\unidade-cadastrar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-unidade-cadastrar',\n  templateUrl: './unidade-cadastrar.component.html',\n  styleUrls: ['./unidade-cadastrar.component.css']\n})\nexport class UnidadeCadastrarComponent {\n  unidadeForm!: FormGroup;\n  usuarios: Usuario[] = [];\n\n  constructor(private fb: FormBuilder, private client: HttpClient,private router: Router) {}\n\n  ngOnInit() {\n    this.client.get<Usuario[]>(\"https://localhost:7144/EpiList/Usuario/listar\")\n      .subscribe({\n        //Requisição com sucesso\n        next: (usuario) => {\n          this.usuarios = usuario;\n          console.table(usuario);\n        }, \n        //Requisição com erro\n        error: (erro) => {\n          console.log(erro);\n        }\n      })\n    \n\n    this.unidadeForm = this.fb.group({\n      nome: ['', Validators.required],\n      usuariosId: this.fb.array([], Validators.required)\n    });\n  }\n\n  adicionarUsuario(cargo: string) {\n    const selectedUsuarios = this.usuarios.filter(usuario => usuario.cargo === cargo);\n    const usuariosIdControl = this.unidadeForm.get('usuariosId');\n    for (const usuario of selectedUsuarios) {\n      usuariosIdControl.push(this.fb.control(usuario.id));\n    }\n  }\n\n  cadastrarUnidade() {\n    // Enviar os dados do formulário para o servidor\n    console.log(this.unidadeForm.value);\n    // Você pode usar um serviço para fazer a chamada de API para cadastrar a unidade.\n  }\n}\n","<p>unidade-cadastrar works!</p>\n"],"mappings":";;;;AAWA,OAAM,MAAOA,yBAAyB;EAIpCC,YAAoBC,EAAe,EAAUC,MAAkB,EAASC,MAAc;IAAlE,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAF9E,KAAAC,QAAQ,GAAc,EAAE;EAEiE;EAEzFC,QAAQA,CAAA;IACN,IAAI,CAACH,MAAM,CAACI,GAAG,CAAY,+CAA+C,CAAC,CACxEC,SAAS,CAAC;MACT;MACAC,IAAI,EAAGC,OAAO,IAAI;QAChB,IAAI,CAACL,QAAQ,GAAGK,OAAO;QACvBC,OAAO,CAACC,KAAK,CAACF,OAAO,CAAC;MACxB,CAAC;MACD;MACAG,KAAK,EAAGC,IAAI,IAAI;QACdH,OAAO,CAACI,GAAG,CAACD,IAAI,CAAC;MACnB;KACD,CAAC;IAGJ,IAAI,CAACE,WAAW,GAAG,IAAI,CAACd,EAAE,CAACe,KAAK,CAAC;MAC/BC,IAAI,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MAC/BC,UAAU,EAAE,IAAI,CAACnB,EAAE,CAACoB,KAAK,CAAC,EAAE,EAAEH,UAAU,CAACC,QAAQ;KAClD,CAAC;EACJ;EAEAG,gBAAgBA,CAACC,KAAa;IAC5B,MAAMC,gBAAgB,GAAG,IAAI,CAACpB,QAAQ,CAACqB,MAAM,CAAChB,OAAO,IAAIA,OAAO,CAACc,KAAK,KAAKA,KAAK,CAAC;IACjF,MAAMG,iBAAiB,GAAG,IAAI,CAACX,WAAW,CAACT,GAAG,CAAC,YAAY,CAAC;IAC5D,KAAK,MAAMG,OAAO,IAAIe,gBAAgB,EAAE;MACtCE,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC1B,EAAE,CAAC2B,OAAO,CAACnB,OAAO,CAACoB,EAAE,CAAC,CAAC;;EAEvD;EAEAC,gBAAgBA,CAAA;IACd;IACApB,OAAO,CAACI,GAAG,CAAC,IAAI,CAACC,WAAW,CAACgB,KAAK,CAAC;IACnC;EACF;EAAC,QAAAC,CAAA,G;qBAvCUjC,yBAAyB,EAAAkC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAzB1C,yBAAyB;IAAA2C,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,mCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXtCd,EAAA,CAAAgB,cAAA,QAAG;QAAAhB,EAAA,CAAAiB,MAAA,+BAAwB;QAAAjB,EAAA,CAAAkB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}