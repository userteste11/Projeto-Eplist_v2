{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UnidadeCadastrarComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const usuario_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", usuario_r2.usua);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(usuario_r2.nome);\n  }\n}\nfunction UnidadeCadastrarComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const usuario_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", usuario_r3.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(usuario_r3.nome);\n  }\n}\nexport class UnidadeCadastrarComponent {\n  constructor(client, router) {\n    this.client = client;\n    this.router = router;\n    this.usuarios = []; // Suponha que você tenha uma lista de usuários aqui\n  }\n\n  ngOnInit() {\n    this.client.get(\"https://localhost:7144/EpiList/Usuario/listar\").subscribe({\n      next: data => {\n        this.usuarios = data;\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  cadastrarUnidade() {\n    // Agora, você pode usar this.unidadeNome, this.gestorSelecionado e this.tecnicoSelecionado\n    // para criar uma nova unidade com os dados selecionados.\n  }\n  static #_ = this.ɵfac = function UnidadeCadastrarComponent_Factory(t) {\n    return new (t || UnidadeCadastrarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UnidadeCadastrarComponent,\n    selectors: [[\"app-unidade-cadastrar\"]],\n    decls: 16,\n    vars: 5,\n    consts: [[\"for\", \"unidadeNome\"], [\"id\", \"unidadeNome\", \"name\", \"unidadeNome\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"gestor\"], [\"id\", \"gestor\", \"name\", \"gestor\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"tecnico\"], [\"id\", \"tecnico\", \"name\", \"tecnico\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"value\"]],\n    template: function UnidadeCadastrarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"unidade-cadastrar works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 0);\n        i0.ɵɵtext(4, \"Nome da Unidade:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function UnidadeCadastrarComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.unidadeNome = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"label\", 2);\n        i0.ɵɵtext(7, \"Gestor:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function UnidadeCadastrarComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.gestorSelecionado = $event;\n        });\n        i0.ɵɵtemplate(9, UnidadeCadastrarComponent_option_9_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 5);\n        i0.ɵɵtext(11, \"T\\u00E9cnico:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function UnidadeCadastrarComponent_Template_select_ngModelChange_12_listener($event) {\n          return ctx.tecnicoSelecionado = $event;\n        });\n        i0.ɵɵtemplate(13, UnidadeCadastrarComponent_option_13_Template, 2, 2, \"option\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function UnidadeCadastrarComponent_Template_button_click_14_listener() {\n          return ctx.cadastrarUnidade();\n        });\n        i0.ɵɵtext(15, \"Cadastrar Unidade\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.unidadeNome);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.gestorSelecionado);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.usuarios);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.tecnicoSelecionado);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.usuarios);\n      }\n    },\n    dependencies: [i3.NgForOf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","usuario_r2","usua","ɵɵadvance","ɵɵtextInterpolate","nome","usuario_r3","id","UnidadeCadastrarComponent","constructor","client","router","usuarios","ngOnInit","get","subscribe","next","data","error","erro","console","log","cadastrarUnidade","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","_2","selectors","decls","vars","consts","template","UnidadeCadastrarComponent_Template","rf","ctx","ɵɵlistener","UnidadeCadastrarComponent_Template_input_ngModelChange_5_listener","$event","unidadeNome","UnidadeCadastrarComponent_Template_select_ngModelChange_8_listener","gestorSelecionado","ɵɵtemplate","UnidadeCadastrarComponent_option_9_Template","UnidadeCadastrarComponent_Template_select_ngModelChange_12_listener","tecnicoSelecionado","UnidadeCadastrarComponent_option_13_Template","UnidadeCadastrarComponent_Template_button_click_14_listener"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Unidade\\unidade-cadastrar\\unidade-cadastrar.component.ts","C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Unidade\\unidade-cadastrar\\unidade-cadastrar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-unidade-cadastrar',\n  templateUrl: './unidade-cadastrar.component.html',\n  styleUrls: ['./unidade-cadastrar.component.css']\n})\nexport class UnidadeCadastrarComponent {\n\n  unidadeNome?: string;\n  gestorSelecionado?: number;\n  tecnicoSelecionado?: number;\n  usuarios: Usuario[]=[]; // Suponha que você tenha uma lista de usuários aqui\n\n  constructor(private client: HttpClient,private router: Router) {}\n\n  ngOnInit() {\n    this.client.get<Usuario[]>(\"https://localhost:7144/EpiList/Usuario/listar\").subscribe({\n      next: (data) => {\n        this.usuarios = data;\n      },\n      error: (erro) => {\n        console.log(erro);\n      },\n    });\n  }\n\n  cadastrarUnidade() {\n    // Agora, você pode usar this.unidadeNome, this.gestorSelecionado e this.tecnicoSelecionado\n    // para criar uma nova unidade com os dados selecionados.\n  }\n\n\n}\n\n","<p>unidade-cadastrar works!</p>\n<div>\n    <label for=\"unidadeNome\">Nome da Unidade:</label>\n    <input id=\"unidadeNome\" [(ngModel)]=\"unidadeNome\" name=\"unidadeNome\" />\n  \n    <label for=\"gestor\">Gestor:</label>\n    <select id=\"gestor\" [(ngModel)]=\"gestorSelecionado\" name=\"gestor\">\n      <option *ngFor=\"let usuario of usuarios\" [value]=\"usuario.usua\">{{usuario.nome}}</option>\n    </select>\n  \n    <label for=\"tecnico\">Técnico:</label>\n    <select id=\"tecnico\" [(ngModel)]=\"tecnicoSelecionado\" name=\"tecnico\">\n      <option *ngFor=\"let usuario of usuarios\" [value]=\"usuario.id\">{{usuario.nome}}</option>\n    </select>\n  \n    <button (click)=\"cadastrarUnidade()\">Cadastrar Unidade</button>\n  </div>\n  \n  \n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}