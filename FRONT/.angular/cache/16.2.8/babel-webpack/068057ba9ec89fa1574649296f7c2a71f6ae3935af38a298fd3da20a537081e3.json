{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UsuarioAtualizarComponent = class UsuarioAtualizarComponent {\n  constructor(client, router, route, fb) {\n    this.client = client;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.usuarioId = this.route.snapshot.params['id'];\n    this.episUsuario = [];\n    this.episDisponivel = [];\n    this.selectedEpi = null;\n    this.usuarioForm = this.fb.group({\n      nome: [''],\n      email: [''],\n      telefone: [''],\n      cpf: [''],\n      senha: [''],\n      cargo: [''],\n      equipeID: [0]\n    });\n  }\n  ngOnInit() {\n    this.client.get(\"https://localhost:7144/EpiList/Usuario/\" + this.usuarioId).subscribe({\n      next: usu => {\n        console.table(usu);\n        this.usuarioForm.patchValue({\n          nome: usu.nome,\n          email: usu.email,\n          telefone: usu.telefone,\n          cpf: usu.cpf,\n          senha: usu.senha,\n          cargo: usu.cargo,\n          equipeID: [usu.equipe]\n        });\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    this.client.get(\"https://localhost:7144/EpiList/EPI/listar\").subscribe({\n      //Requisição com sucesso\n      next: epi => {\n        this.episDisponivel = epi;\n        console.table(epi);\n      },\n      //Requisição com erro\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  salvarEdicao() {\n    const dadosEditados = this.usuarioForm.value;\n    console.log(dadosEditados);\n    this.client.put(\"https://localhost:7144/EpiList/Usuario/\" + this.usuarioId + \"/Atualizar\", dadosEditados).subscribe({\n      next: data => {\n        console.log(data);\n        this.router.navigate(['pages/Usuario/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  adicionarEpi() {\n    console.log(this.selectedEpi?.epiID + \"aaa\");\n    if (this.selectedEpi != null) {\n      const epiIds = [this.selectedEpi.epiID];\n      this.client.post(\"https://localhost:7144/EpiList/Usuario/\" + this.usuarioId + \"/AdicionarEPIs\", epiIds).subscribe({\n        // Requisição com sucesso\n        next: e => {\n          console.log(e);\n        },\n        // Requisição com erro\n        error: erro => {\n          console.log(erro);\n        }\n      });\n      this.router.navigate(['pages/Usuario/listar']);\n    }\n  }\n};\nUsuarioAtualizarComponent = __decorate([Component({\n  selector: 'app-usuario-atualizar',\n  templateUrl: './usuario-atualizar.component.html',\n  styleUrls: ['./usuario-atualizar.component.css']\n})], UsuarioAtualizarComponent);","map":{"version":3,"names":["Component","UsuarioAtualizarComponent","constructor","client","router","route","fb","usuarioId","snapshot","params","episUsuario","episDisponivel","selectedEpi","usuarioForm","group","nome","email","telefone","cpf","senha","cargo","equipeID","ngOnInit","get","subscribe","next","usu","console","table","patchValue","equipe","error","erro","log","epi","salvarEdicao","dadosEditados","value","put","data","navigate","adicionarEpi","epiID","epiIds","post","e","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Usuario\\usuario-atualizar\\usuario-atualizar\\usuario-atualizar.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Epi } from 'src/app/models/epi.model';\nimport { Usuario } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-usuario-atualizar',\n  templateUrl: './usuario-atualizar.component.html',\n  styleUrls: ['./usuario-atualizar.component.css']\n})\nexport class UsuarioAtualizarComponent {\n  usuarioId= this.route.snapshot.params['id'];\n  episUsuario: Epi[] = []\n  usuarioForm: FormGroup; // Formulário reativo\n  episDisponivel: Epi[] = []\n  selectedEpi: Epi | null = null;\n\n\n  constructor(private client: HttpClient,private router: Router, private route: ActivatedRoute, private fb: FormBuilder) \n  {\n    this.usuarioForm = this.fb.group({\n      nome: [''],\n      email: [''],\n      telefone: [''],\n      cpf: [''],\n      senha: [''],\n      cargo: [''],\n      equipeID: [0]\n    });\n  }\n  ngOnInit(): void{\n\n    this.client.get<Usuario>(\"https://localhost:7144/EpiList/Usuario/\"+this.usuarioId)\n    .subscribe({\n      next: (usu) => {\n        console.table(usu);\n        \n        this.usuarioForm.patchValue({\n          nome: usu.nome,\n          email: usu.email,\n          telefone: usu.telefone,\n          cpf: usu.cpf,\n          senha: usu.senha,\n          cargo: usu.cargo,\n          equipeID: [usu.equipe]\n        });\n      }, \n      error: (erro) => {\n        console.log(erro);\n      }\n    })\n    this.client.get<Epi[]>(\"https://localhost:7144/EpiList/EPI/listar\")\n    .subscribe({\n      //Requisição com sucesso\n      next: (epi) => {\n        this.episDisponivel=epi;\n        console.table(epi);\n      }, \n      //Requisição com erro\n      error: (erro) => {\n        console.log(erro);\n      }\n    })\n \n  }\n\n  salvarEdicao(){\n    const dadosEditados = this.usuarioForm.value;\n    console.log(dadosEditados);\n    this.client.put<Usuario>(\"https://localhost:7144/EpiList/Usuario/\"+this.usuarioId+\"/Atualizar\", dadosEditados).subscribe({\n      next: (data) => {\n        console.log(data);\n        this.router.navigate(['pages/Usuario/listar']);\n      },\n      error: (erro) => {\n        console.log(erro);\n      },\n    });\n  }\n\n\n\n  \n  adicionarEpi(): void {\n    console.log(this.selectedEpi?.epiID+\"aaa\")\n    if (this.selectedEpi!= null) {\n      const epiIds = [this.selectedEpi.epiID];\n      this.client.post<string>(\"https://localhost:7144/EpiList/Usuario/\" + this.usuarioId + \"/AdicionarEPIs\", epiIds)\n      .subscribe({\n        // Requisição com sucesso\n        next: (e) => {\n          console.log(e);\n        },\n        // Requisição com erro\n        error: (erro) => {\n          console.log(erro);\n        }\n      });\n      this.router.navigate(['pages/Usuario/listar']);\n    }\n  }\n\n  \n    \n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}