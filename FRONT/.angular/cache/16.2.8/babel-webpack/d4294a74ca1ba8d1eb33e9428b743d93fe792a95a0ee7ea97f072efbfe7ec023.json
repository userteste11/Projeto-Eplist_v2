{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction UsuarioAtualizarComponent_option_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const epi_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", epi_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.episode.name);\n  }\n}\nexport class UsuarioAtualizarComponent {\n  constructor(client, router, route, fb) {\n    this.client = client;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.episUsuario = [];\n    this.episDisponivel = [];\n    this.usuarioForm = this.fb.group({\n      nome: [''],\n      email: [''],\n      telefone: [''],\n      cpf: [''],\n      senha: [''],\n      cargo: [''],\n      equipeID: [0]\n    });\n  }\n  ngOnInit() {\n    this.usuarioId = this.route.snapshot.params['id'];\n    this.client.get(\"https://localhost:7144/EpiList/Usuario/\" + this.usuarioId).subscribe({\n      next: usu => {\n        console.table(usu);\n        this.usuarioForm.patchValue({\n          nome: usu.nome,\n          email: usu.email,\n          telefone: usu.telefone,\n          cpf: usu.cpf,\n          senha: usu.senha,\n          cargo: usu.cargo,\n          equipeID: [usu.equipe]\n        });\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n    this.client.get(\"https://localhost:7144/EpiList/EPI/listar\").subscribe({\n      //Requisição com sucesso\n      next: epi => {\n        this.episDisponivel = epi;\n        console.table(epi);\n      },\n      //Requisição com erro\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  salvarEdicao() {\n    const dadosEditados = this.usuarioForm.value;\n    console.log(dadosEditados);\n    this.client.put(\"https://localhost:7144/EpiList/Usuario/\" + this.usuarioId + \"/Atualizar\", dadosEditados).subscribe({\n      next: data => {\n        console.log(data);\n        this.router.navigate(['pages/Usuario/listar']);\n      },\n      error: erro => {\n        console.log(erro);\n      }\n    });\n  }\n  adicionarEpi(epi) {\n    // Realize a lógica para adicionar o EPI ao usuário e atualizar a lista de EPIS do usuário\n    // Certifique-se de também atualizar a lista de EPIS disponíveis se necessário\n  }\n  static #_ = this.ɵfac = function UsuarioAtualizarComponent_Factory(t) {\n    return new (t || UsuarioAtualizarComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UsuarioAtualizarComponent,\n    selectors: [[\"app-usuario-atualizar\"]],\n    decls: 38,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"nome\"], [\"type\", \"text\", \"id\", \"nome\", \"formControlName\", \"nome\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"formControlName\", \"email\"], [\"for\", \"telefone\"], [\"type\", \"tel\", \"id\", \"telefone\", \"formControlName\", \"telefone\"], [\"for\", \"cpf\"], [\"type\", \"text\", \"id\", \"cpf\", \"formControlName\", \"cpf\"], [\"for\", \"senha\"], [\"type\", \"text\", \"id\", \"senha\", \"formControlName\", \"senha\"], [\"for\", \"cargo\"], [\"type\", \"text\", \"id\", \"cargo\", \"formControlName\", \"cargo\"], [\"for\", \"equipeID\"], [\"type\", \"number\", \"id\", \"equipeID\", \"formControlName\", \"equipeID\"], [\"type\", \"submit\"], [\"for\", \"episodeSelect\"], [\"id\", \"episodeSelect\", \"name\", \"selectedEpisode\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function UsuarioAtualizarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function UsuarioAtualizarComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.salvarEdicao();\n        });\n        i0.ɵɵelementStart(2, \"div\")(3, \"label\", 1);\n        i0.ɵɵtext(4, \"Nome:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Email:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\")(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Telefone:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\")(15, \"label\", 7);\n        i0.ɵɵtext(16, \"CPF:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\")(19, \"label\", 9);\n        i0.ɵɵtext(20, \"Senha:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\")(23, \"label\", 11);\n        i0.ɵɵtext(24, \"Cargo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\")(27, \"label\", 13);\n        i0.ɵɵtext(28, \"Equipe ID:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 15);\n        i0.ɵɵtext(31, \"Salvar Edi\\u00E7\\u00E3o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(32, \"label\", 16);\n        i0.ɵɵtext(33, \"Selecione um epis\\u00F3dio:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"select\", 17);\n        i0.ɵɵtemplate(35, UsuarioAtualizarComponent_option_35_Template, 2, 2, \"option\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"button\", 15);\n        i0.ɵɵtext(37, \"Enviar\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.usuarioForm);\n        i0.ɵɵadvance(34);\n        i0.ɵɵproperty(\"ngForOf\", ctx.episDisponivel);\n      }\n    },\n    dependencies: [i4.NgForOf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","epi_r1","name","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","episode","UsuarioAtualizarComponent","constructor","client","router","route","fb","episUsuario","episDisponivel","usuarioForm","group","nome","email","telefone","cpf","senha","cargo","equipeID","ngOnInit","usuarioId","snapshot","params","get","subscribe","next","usu","console","table","patchValue","equipe","error","erro","log","epi","salvarEdicao","dadosEditados","value","put","data","navigate","adicionarEpi","_","ɵɵdirectiveInject","i1","HttpClient","i2","Router","ActivatedRoute","i3","FormBuilder","_2","selectors","decls","vars","consts","template","UsuarioAtualizarComponent_Template","rf","ctx","ɵɵlistener","UsuarioAtualizarComponent_Template_form_ngSubmit_1_listener","ɵɵelement","ɵɵtemplate","UsuarioAtualizarComponent_option_35_Template"],"sources":["C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Usuario\\usuario-atualizar\\usuario-atualizar\\usuario-atualizar.component.ts","C:\\Users\\Pichau\\Desktop\\v2\\Projeto-Eplist\\FRONT\\src\\app\\pages\\Usuario\\usuario-atualizar\\usuario-atualizar\\usuario-atualizar.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Epi } from 'src/app/models/epi.model';\nimport { Usuario } from 'src/app/models/usuario.model';\n\n@Component({\n  selector: 'app-usuario-atualizar',\n  templateUrl: './usuario-atualizar.component.html',\n  styleUrls: ['./usuario-atualizar.component.css']\n})\nexport class UsuarioAtualizarComponent {\n  usuarioId!: number;\n  episUsuario: Epi[] = []\n  usuarioForm: FormGroup; // Formulário reativo\n  episDisponivel: Epi[] = []\n\n  constructor(private client: HttpClient,private router: Router, private route: ActivatedRoute, private fb: FormBuilder) \n  {\n    this.usuarioForm = this.fb.group({\n      nome: [''],\n      email: [''],\n      telefone: [''],\n      cpf: [''],\n      senha: [''],\n      cargo: [''],\n      equipeID: [0]\n    });\n  }\n  ngOnInit(): void{\n    this.usuarioId = this.route.snapshot.params['id'];\n    this.client.get<Usuario>(\"https://localhost:7144/EpiList/Usuario/\"+this.usuarioId)\n    .subscribe({\n      next: (usu) => {\n        console.table(usu);\n        \n        this.usuarioForm.patchValue({\n          nome: usu.nome,\n          email: usu.email,\n          telefone: usu.telefone,\n          cpf: usu.cpf,\n          senha: usu.senha,\n          cargo: usu.cargo,\n          equipeID: [usu.equipe]\n        });\n      }, \n      error: (erro) => {\n        console.log(erro);\n      }\n    })\n    this.client.get<Epi[]>(\"https://localhost:7144/EpiList/EPI/listar\")\n    .subscribe({\n      //Requisição com sucesso\n      next: (epi) => {\n        this.episDisponivel=epi;\n        console.table(epi);\n      }, \n      //Requisição com erro\n      error: (erro) => {\n        console.log(erro);\n      }\n    })\n \n  }\n\n  salvarEdicao(){\n    const dadosEditados = this.usuarioForm.value;\n    console.log(dadosEditados);\n    this.client.put<Usuario>(\"https://localhost:7144/EpiList/Usuario/\"+this.usuarioId+\"/Atualizar\", dadosEditados).subscribe({\n      next: (data) => {\n        console.log(data);\n        this.router.navigate(['pages/Usuario/listar']);\n      },\n      error: (erro) => {\n        console.log(erro);\n      },\n    });\n  }\n\n\n\n  \n  adicionarEpi(epi: Epi): void {\n    // Realize a lógica para adicionar o EPI ao usuário e atualizar a lista de EPIS do usuário\n    // Certifique-se de também atualizar a lista de EPIS disponíveis se necessário\n  }\n\n  \n    \n\n\n}\n","<div>\n<form [formGroup]=\"usuarioForm\" (ngSubmit)=\"salvarEdicao()\">\n    <div>\n      <label for=\"nome\">Nome:</label>\n      <input type=\"text\" id=\"nome\" formControlName=\"nome\">\n    </div>\n    <div>\n      <label for=\"email\">Email:</label>\n      <input type=\"email\" id=\"email\" formControlName=\"email\">\n    </div>\n    <div>\n      <label for=\"telefone\">Telefone:</label>\n      <input type=\"tel\" id=\"telefone\" formControlName=\"telefone\">\n    </div>\n    <div>\n      <label for=\"cpf\">CPF:</label>\n      <input type=\"text\" id=\"cpf\" formControlName=\"cpf\">\n    </div>\n    <div>\n      <label for=\"senha\">Senha:</label>\n      <input type=\"text\" id=\"senha\" formControlName=\"senha\">\n    </div>\n    <div>\n      <label for=\"cargo\">Cargo:</label>\n      <input type=\"text\" id=\"cargo\" formControlName=\"cargo\">\n    </div>\n    <div>\n      <label for=\"equipeID\">Equipe ID:</label>\n      <input type=\"number\" id=\"equipeID\" formControlName=\"equipeID\">\n    </div>\n    <button type=\"submit\">Salvar Edição</button>\n  </form>\n</div>\n\n  <label for=\"episodeSelect\">Selecione um episódio:</label>\n  <select id=\"episodeSelect\" name=\"selectedEpisode\">\n    <option *ngFor=\"let epi of episDisponivel\" [value]=\"epi.name\">{{ episode.name }}</option>\n  </select>\n  <button type=\"submit\">Enviar</button>\n\n\n\n\n\n\n\n\n\n\n  \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}